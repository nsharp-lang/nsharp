name: Main workflow
on: [push]
jobs:
  check-build-test:
    name: "Check-Build-Test"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: "3.1.302"
    - run: dotnet tool restore
    - run: dotnet format --check  
    - run: dotnet restore
    - run: dotnet build
    - run: dotnet test
    strategy:
      matrix:
        os: [ "macos-10.15", "ubuntu-16.04", "ubuntu-18.04", "ubuntu-20.04", "windows-2019" ]
  publish:
    name: "Publish"
    needs: [ check-build-test ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: "3.1.302"
    - run: dotnet publish --configuration Release --output ./artifacts/Nsharp/ ./src/Nsharp/Nsharp.csproj
    - run: dotnet publish --configuration Release --output ./artifacts/Nsharp.Compiler/ ./src/Nsharp.Compiler/Nsharp.Compiler.csproj
    - run: dotnet publish --configuration Release --output ./artifacts/Nsharp.Interpreter/ ./src/Nsharp.Interpreter/Nsharp.Interpreter.csproj
    - uses: actions/upload-artifact@v2
      with:
        name: Nsharp-${{ matrix.os }}
        path: ./artifacts/Nsharp/
    - uses: actions/upload-artifact@v2
      with:
        name: Nsharp.Compiler-${{ matrix.os }}
        path: ./artifacts/Nsharp.Compiler/
    - uses: actions/upload-artifact@v2
      with:
        name: Nsharp.Interpreter-${{ matrix.os }}
        path: ./artifacts/Nsharp.Interpreter/
    strategy:
      matrix:
        os: [ "macos-10.15", "ubuntu-16.04", "ubuntu-18.04", "ubuntu-20.04", "windows-2019" ]
